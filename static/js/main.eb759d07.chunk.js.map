{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","winner.js","index.js"],"names":["Square","value","onClick","style","className","required","Board","squares","map","square","i","key","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","Fragment","historyPoint","slice","current","_step","move","destination","step","ReactDom","render","document","getElementById"],"mappings":"2MAEA,IASeA,EATA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACdC,EAAQF,EAAK,kBAAcA,GAAU,UAC3C,OACI,4BAAQG,UAAWD,EAAOE,UAAQ,EAACH,QAASA,GACvCD,ICSEK,EAZD,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASL,EAAX,EAAWA,QAAX,OACV,yBAAKE,UAAU,SACVG,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,kBAAC,EAAD,CACAC,IAAKD,EACLT,MAAOQ,EACPP,QAAS,kBAAMA,EAAQQ,WCsDpBE,EA3DF,WAAO,IAAD,EACeC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADvC,mBACRC,EADQ,KACCC,EADD,OAEqBJ,mBAAS,GAF9B,mBAERK,EAFQ,KAEIC,EAFJ,OAGeN,oBAAS,GAHxB,mBAGRO,EAHQ,KAGCC,EAHD,KAITC,ECRH,SAAyBf,GAW5B,IAVA,IAAMgB,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACjBa,EAAMb,GADW,GAC5Be,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GAClE,OAAOpB,EAAQkB,GAGvB,OAAO,KDTQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IAiC3B,OACI,kBAAC,IAAMU,SAAP,KACI,oDACA,kBAAC,EAAD,CAAOvB,QAASS,EAAQE,GAAahB,QAlCzB,SAACQ,GACjB,IAAMqB,EAAef,EAAQgB,MAAM,EAAGd,EAAa,GAC7Ce,EAAUF,EAAab,GACvBX,EAAO,YAAO0B,GAGhBX,GAAUf,EAAQG,KAGtBH,EAAQG,GAAKmB,EACbZ,EAAW,GAAD,mBAAKc,GAAL,CAAmBxB,KAC7BY,EAAcY,EAAaP,QAC3BH,GAAYD,OAuBR,yBAAKhB,UAAU,gBACX,6BACA,uCAhBRY,EAAQR,KAAI,SAAC0B,EAAOC,GAChB,IAAMC,EAAcD,EAAI,sBAAkBA,GAAS,cACnD,OACI,wBAAIxB,IAAKwB,GACL,4BAAQjC,QAAS,kBAT7BiB,EADYkB,EAU8BF,QAR1Cd,EAAWgB,EAAO,IAAM,GAFb,IAACA,IAUsCD,QAe1C,4BACK,gBAAkBP,GAEvB,4BACKP,EAAS,cAAgBA,EAAS,mBElDvDgB,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U","file":"static/js/main.eb759d07.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Square = ({value, onClick}) => {\r\n    const style = value ? `squares ${value}` : 'squares';\r\n    return (\r\n        <button className={style} required onClick={onClick}>\r\n            {value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react'   \r\nimport Square from './Square'\r\n\r\nconst Board = ({squares, onClick}) => (\r\n    <div className=\"board\">\r\n        {squares.map((square, i) => (\r\n            <Square \r\n            key={i} \r\n            value={square} \r\n            onClick={() => onClick(i)} \r\n            />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default Board;","import React, { useState } from 'react'\r\nimport { calculateWinner } from '../winner'\r\nimport Board from './Board'\r\n\r\nconst Game = () => {\r\n    const [history, setHistory] = useState([Array(9).fill(null)]);\r\n    const [stepNumber, setStepNumber] = useState(0);\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const winner = calculateWinner(history[stepNumber]);\r\n    const xO = xIsNext ? 'X' : 'O';\r\n\r\n    const handleClick = (i) => {\r\n        const historyPoint = history.slice(0, stepNumber + 1);\r\n        const current = historyPoint[stepNumber];\r\n        const squares = [...current];\r\n\r\n        //return if won or occupied\r\n        if (winner || squares[i]) return;\r\n\r\n        //select square\r\n        squares[i] = xO;\r\n        setHistory([...historyPoint, squares]);\r\n        setStepNumber(historyPoint.length);\r\n        setXisNext(!xIsNext);\r\n    };\r\n\r\n    const jumpTo = (step) => {\r\n        setStepNumber(step);\r\n        setXisNext(step % 2 === 0);\r\n    }\r\n\r\n    const renderMoves = () => \r\n        history.map((_step, move) => {\r\n            const destination = move ? `Go to move #${move}` : 'Go to Start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => jumpTo(move)}>{destination}</button>\r\n                </li>\r\n            );\r\n        });\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h1>TicTacToe with hooks</h1>\r\n            <Board squares={history[stepNumber]} onClick={handleClick} />\r\n            <div className='info-wrapper'>\r\n                <div>\r\n                <h3>History</h3>\r\n                {renderMoves()}\r\n                </div>\r\n                <h3>\r\n                    {'Next Player: ' + xO}\r\n                </h3>\r\n                <h3>\r\n                    {winner ? 'Winner is: ' + winner : 'Winner is...'}\r\n                </h3>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n};\r\n\r\nexport default Game","export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Game from \"./components/Game\";\r\n\r\nReactDom.render(<Game />, document.getElementById(\"root\"));"],"sourceRoot":""}